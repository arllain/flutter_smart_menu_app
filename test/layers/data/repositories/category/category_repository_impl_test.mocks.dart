// Mocks generated by Mockito 5.3.0 from annotations
// in smart_menu_app/test/layers/data/repositories/category/category_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:smart_menu_app/core/network/network_info.dart' as _i5;
import 'package:smart_menu_app/layers/data/datasources/category/local/category_local_datasource.dart'
    as _i2;
import 'package:smart_menu_app/layers/data/models/category_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CategoryLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryLocalDataSource extends _i1.Mock
    implements _i2.CategoryLocalDataSource {
  MockCategoryLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CategoryModel>> getAllCategories() => (super.noSuchMethod(
          Invocation.method(#getAllCategories, []),
          returnValue:
              _i3.Future<List<_i4.CategoryModel>>.value(<_i4.CategoryModel>[]))
      as _i3.Future<List<_i4.CategoryModel>>);
  @override
  _i3.Future<void> cacheCategoryList(List<_i4.CategoryModel>? categoryList) =>
      (super.noSuchMethod(Invocation.method(#cacheCategoryList, [categoryList]),
              returnValue: _i3.Future<void>.value(),
              returnValueForMissingStub: _i3.Future<void>.value())
          as _i3.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
}
